version: '3'

services:
  # router
  nginx:
    image: nginx:1.19.3
    volumes:
      - ./nginx/ci/drone:/etc/nginx/conf.d/drone.conf
      # 改在部署時更新 nginx 設定檔，在 reload
      # docker cp nginx/prod/flask gogolook-task_nginx_1:/etc/nginx/conf.d/flask.conf
      # docker exec -ti 9dcc496fe6d5 nginx -s reload 
      #- ./nginx/prod/flask:/etc/nginx/conf.d/flask.conf
      - ./nginx/prod/prometheus:/etc/nginx/conf.d/prometheus.conf
    ports:
      - "80:80"
    restart: always
    networks:
      - ci
      - prod

  # CI/CD
  gitea:
    image: gitea/gitea:1.12.5
    environment:
      - HOST=gitea
    volumes:
      - ./.data/ci/gitea/:/data
    ports:
      - "3000:3000"
      - "22:22"
    restart: always
    networks:
      - ci

  drone-server:
    image: drone/drone:1.2.1
    container_name: drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.data/ci/drone/:/var/lib/drone
    environment:
      - DRONE_OPEN=true
      - DRONE_SERVER_HOST=drone-server:80
      - DRONE_DEBUG=true
      - DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_GITEA=true
      - DRONE_GITEA_SKIP_VERIFY=false
      - DRONE_GITEA_SERVER=http://gitea:3000
      - DRONE_PROVIDER=gitea
      - DRONE_SERVER_PROTO=http
      - DRONE_RPC_SECRET=some-secret
      - DRONE_USER_CREATE=username:gogolook,admin:true
      - DRONE_DATABASE_DATASOURCE=/var/lib/drone/drone.sqlite
      - DRONE_DATABASE_DRIVER=sqlite3
      - TZ=Asia/Taipei
      - DRONE_RUNNER_NETWORKS=gogolook-task_ci,gogolook-task_prod
    restart: always
    networks:
      - ci

  drone-agent:
    image: drone/agent:1.2.1
    container_name: drone-agent
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_SERVER=drone-server:9000
      - DRONE_RPC_SECRET=some-secret
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_DEBUG=true
      - TZ=Asia/Taipei
    restart: always
    networks:
      - ci

  # prod 環境
  proddb:
    image: postgres:9.6
    container_name: proddb
    volumes:
      - ./.data/prod/db/:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=gogolook
      - POSTGRES_PASSWORD=gogolook
      - POSTGRES_DB=gogolook
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: always
    networks:
      - prod

  prometheus-prod:
    image: prom/prometheus:v2.12.0
    ports:
      - "9090:9090"
    command:
      --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus-prod.yaml:/etc/prometheus/prometheus.yml
    networks:
      - prod

networks:
  ci:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.10.0/24
  stg:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.11.0/24
  prod:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.12.0/24